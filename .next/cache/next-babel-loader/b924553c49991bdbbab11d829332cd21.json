{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport Nav from \"../../components/nav\";\nimport Footer from \"../../components/footer\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUserCircle } from \"@fortawesome/free-solid-svg-icons/faUserCircle\";\nimport { useRouter } from \"next/router\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { getServerSideCookie } from \"../../utils/serverSideStorage\";\nimport { getUser, login, updateUser } from \"../../api\";\nimport Link from \"next/link\";\nimport { Formik } from \"formik\";\nimport { PulseLoader } from \"react-spinners\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst Profile = ({\n  user\n}) => {\n  const {\n    name,\n    contact_no,\n    full_address\n  } = user;\n  const {\n    logout\n  } = useAuth();\n  const router = useRouter();\n  const {\n    addToast\n  } = useToasts();\n\n  const onLogoutClick = () => {\n    logout();\n    router.push(\"/login\");\n  };\n\n  const onChangePasswordClick = () => {\n    router.push(\"/change-password\");\n  };\n\n  const onSubmit = async (values, {\n    setSubmitting,\n    setErrors\n  }) => {\n    try {\n      const response = await updateUser(values);\n      addToast((response === null || response === void 0 ? void 0 : response.message) || \"User updated successfully.\", {\n        appearance: \"success\"\n      });\n    } catch (response) {\n      if (response.errors) {\n        setErrors(response.errors.reduce((p, c) => _objectSpread(_objectSpread({}, p), c), {}));\n      } else {\n        addToast((response === null || response === void 0 ? void 0 : response.message) || \"Error while updating user.\", {\n          appearance: \"error\"\n        });\n      }\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"Products\"\n      }), /*#__PURE__*/_jsx(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      })]\n    }), /*#__PURE__*/_jsx(Nav, {}), /*#__PURE__*/_jsx(\"section\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: \"app-page-container\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"profile-details-container\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"profile-avatar\",\n            children: /*#__PURE__*/_jsx(FontAwesomeIcon, {\n              icon: faUserCircle\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"wrapper\",\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              className: \"profile-info\",\n              children: [/*#__PURE__*/_jsx(\"h3\", {\n                className: \"username\",\n                children: user === null || user === void 0 ? void 0 : user.role\n              }), /*#__PURE__*/_jsx(\"span\", {\n                className: \"email\",\n                children: user === null || user === void 0 ? void 0 : user.email\n              }), /*#__PURE__*/_jsx(Link, {\n                href: \"/my-orders\",\n                children: \"My orders\"\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: \"action-container\",\n              children: [/*#__PURE__*/_jsx(\"button\", {\n                className: \"btn accent-btn\",\n                onClick: onChangePasswordClick,\n                children: \"Change Password\"\n              }), /*#__PURE__*/_jsx(\"button\", {\n                className: \"btn primary-outline-btn\",\n                onClick: onLogoutClick,\n                children: \"Logout\"\n              })]\n            }), /*#__PURE__*/_jsx(\"div\", {\n              style: {\n                marginTop: \"1rem\"\n              },\n              children: /*#__PURE__*/_jsx(Formik, {\n                initialValues: {\n                  name,\n                  contact_no,\n                  full_address\n                },\n                onSubmit: onSubmit,\n                children: ({\n                  values,\n                  errors,\n                  touched,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit,\n                  isSubmitting\n                }) => /*#__PURE__*/_jsxs(\"form\", {\n                  onSubmit: handleSubmit,\n                  children: [/*#__PURE__*/_jsxs(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsx(\"label\", {\n                      htmlFor: \"name\",\n                      children: \"Name\"\n                    }), /*#__PURE__*/_jsx(\"input\", {\n                      className: \"form-control\",\n                      type: \"text\",\n                      name: \"name\",\n                      onChange: handleChange,\n                      onBlur: handleBlur,\n                      value: values.name\n                    }), errors.name && touched.name && /*#__PURE__*/_jsx(\"span\", {\n                      className: \"error-message\",\n                      children: errors.name\n                    })]\n                  }), /*#__PURE__*/_jsxs(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsx(\"label\", {\n                      htmlFor: \"contact_no\",\n                      children: \"Contact no\"\n                    }), /*#__PURE__*/_jsx(\"input\", {\n                      className: \"form-control\",\n                      type: \"text\",\n                      name: \"contact_no\",\n                      onChange: handleChange,\n                      onBlur: handleBlur,\n                      value: values.contact_no\n                    }), errors.contact_no && touched.contact_no && /*#__PURE__*/_jsx(\"span\", {\n                      className: \"error-message\",\n                      children: errors.contact_no\n                    })]\n                  }), /*#__PURE__*/_jsxs(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsx(\"label\", {\n                      htmlFor: \"full_address\",\n                      children: \"Full address\"\n                    }), /*#__PURE__*/_jsx(\"input\", {\n                      className: \"form-control\",\n                      type: \"text\",\n                      name: \"full_address\",\n                      onChange: handleChange,\n                      onBlur: handleBlur,\n                      value: values.full_address\n                    }), errors.full_address && touched.full_address && /*#__PURE__*/_jsx(\"span\", {\n                      className: \"error-message\",\n                      children: errors.full_address\n                    })]\n                  }), /*#__PURE__*/_jsxs(\"button\", {\n                    className: \"btn accent-btn\",\n                    disabled: isSubmitting,\n                    children: [\"Update \", /*#__PURE__*/_jsx(PulseLoader, {\n                      loading: isSubmitting,\n                      size: 4\n                    })]\n                  })]\n                })\n              })\n            })]\n          })]\n        })\n      })\n    }), /*#__PURE__*/_jsx(Footer, {})]\n  });\n};\n\nexport default Profile;\nexport const getServerSideProps = async context => {\n  const token = getServerSideCookie(context)(\"token\");\n\n  try {\n    const user = await getUser(token)();\n    return {\n      props: {\n        user\n      }\n    };\n  } catch (e) {\n    console.log(\"error\", e.message);\n  }\n\n  return {\n    props: {\n      user: {}\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"module"}