{"ast":null,"code":"import httpClient from \"./httpClient\";\nimport convertJsonToFormData from \"../utils/convertJsonToFormData\";\nimport { getItem, removeItem } from \"../utils/localStorage\";\n\nconst getHttpClient = (token = getItem(\"token\"), isMultipartRequest = false, validateStatus = false) => {\n  const axiosConfig = {\n    transformRequest: [(data, headers) => {\n      headers[\"Accept\"] = \"application/json\";\n\n      if (token) {\n        headers[\"Authorization\"] = `Bearer ${token}`;\n      }\n\n      if (isMultipartRequest) {\n        headers[\"Content-Type\"] = \"multipart/form-data\";\n        return convertJsonToFormData(data);\n      }\n\n      headers[\"Content-Type\"] = \"application/json\";\n      return JSON.stringify(data);\n    }]\n  };\n\n  if (validateStatus) {\n    axiosConfig.validateStatus = function (status) {\n      if (status === 401) {\n        removeItem(\"token\");\n        removeItem(\"cart\");\n        window.location.reload();\n      }\n\n      return status >= 200 && status < 300;\n    };\n  }\n\n  return httpClient(axiosConfig);\n};\n\nexport const getCategories = token => async params => {\n  return await getHttpClient(token).get(\"/categories\", {\n    params\n  }).then(response => response.data);\n};\nexport const getProducts = token => async params => {\n  return await getHttpClient(token).get(\"/products\", {\n    params\n  }).then(response => response.data);\n};\nexport const getProductDetail = token => async id => {\n  return await getHttpClient(token).get(`/products/${id}`).then(response => response.data);\n};\nexport const createPayPalTransaction = token => async (data) => await getHttpClient(token).post(`/orders/create-paypal-transaction`, data).then(response => response.data);\nexport const captureOrder = token => async data => {\n  const response = await getHttpClient(token).post(`/orders/capture-order`, data);\n  return response.data;\n};\nexport const login = async data => {\n  return await getHttpClient().post(`/users/login`, data).then(response => response.data).catch(e => {\n    var _e$response;\n\n    throw e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.data;\n  });\n};\nexport const register = async data => {\n  return await getHttpClient().post(`/users/register`, data).then(response => response.data).catch(e => {\n    var _e$response2;\n\n    throw e === null || e === void 0 ? void 0 : (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : _e$response2.data;\n  });\n};","map":{"version":3,"sources":["/home/anuz/work/personal/creation-arts/api/index.js"],"names":["httpClient","convertJsonToFormData","getItem","removeItem","getHttpClient","token","isMultipartRequest","validateStatus","axiosConfig","transformRequest","data","headers","JSON","stringify","status","window","location","reload","getCategories","params","get","then","response","getProducts","getProductDetail","id","createPayPalTransaction","post","captureOrder","login","catch","e","register"],"mappings":"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","sourcesContent":["import httpClient from \"./httpClient\";\nimport convertJsonToFormData from \"../utils/convertJsonToFormData\";\nimport { getItem, removeItem } from \"../utils/localStorage\";\n\nconst getHttpClient = (\n  token = getItem(\"token\"),\n  isMultipartRequest = false,\n  validateStatus = false\n) => {\n  const axiosConfig = {\n    transformRequest: [\n      (data, headers) => {\n        headers[\"Accept\"] = \"application/json\";\n        if (token) {\n          headers[\"Authorization\"] = `Bearer ${token}`;\n        }\n        if (isMultipartRequest) {\n          headers[\"Content-Type\"] = \"multipart/form-data\";\n          return convertJsonToFormData(data);\n        }\n\n        headers[\"Content-Type\"] = \"application/json\";\n        return JSON.stringify(data);\n      },\n    ],\n  };\n  if (validateStatus) {\n    axiosConfig.validateStatus = function (status) {\n      if (status === 401) {\n        removeItem(\"token\");\n        removeItem(\"cart\");\n        window.location.reload();\n      }\n      return status >= 200 && status < 300;\n    };\n  }\n\n  return httpClient(axiosConfig);\n};\n\nexport const getCategories = (token) => async (params) => {\n  return await getHttpClient(token)\n    .get(\"/categories\", { params })\n    .then((response) => response.data);\n};\n\nexport const getProducts = (token) => async (params) => {\n  return await getHttpClient(token)\n    .get(\"/products\", { params })\n    .then((response) => response.data);\n};\n\nexport const getProductDetail = (token) => async (id) => {\n  return await getHttpClient(token)\n    .get(`/products/${id}`)\n    .then((response) => response.data);\n};\n\nexport const createPayPalTransaction = (token) => async (data) =>\n  await getHttpClient(token)\n    .post(`/orders/create-paypal-transaction`, data)\n    .then((response) => response.data);\n\nexport const captureOrder = (token) => async (data) => {\n  const response = await getHttpClient(token).post(\n    `/orders/capture-order`,\n    data\n  );\n\n  return response.data;\n};\n\nexport const login = async (data) => {\n  return await getHttpClient()\n    .post(`/users/login`, data)\n    .then((response) => response.data)\n    .catch((e) => {\n      throw e?.response?.data;\n    });\n};\n\nexport const register = async (data) => {\n  return await getHttpClient()\n    .post(`/users/register`, data)\n    .then((response) => response.data)\n    .catch((e) => {\n      throw e?.response?.data;\n    });\n};\n"]},"metadata":{},"sourceType":"module"}