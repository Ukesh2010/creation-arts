{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport Image from \"next/image\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { setNewPassword } from \"../../api\";\nimport { useRouter } from \"next/router\";\nconst SetNewPasswordSchema = Yup.object().shape({\n  password: Yup.string().min(8).max(16).required(),\n  password2: Yup.string().oneOf([Yup.ref(\"password\")], \"should match with password\").required(\"password confirmation is a required field\")\n});\n\nconst SetNewPassword = ({\n  token\n}) => {\n  const router = useRouter();\n\n  const onSubmit = async (values, {\n    setSubmitting,\n    setErrors\n  }) => {\n    setSubmitting(true);\n\n    try {\n      await setNewPassword(_objectSpread(_objectSpread({}, values), {}, {\n        token: token\n      }));\n      router.push(\"/login\");\n    } catch (response) {\n      if (response.errors) {\n        var _response$errors;\n\n        setErrors(response === null || response === void 0 ? void 0 : (_response$errors = response.errors) === null || _response$errors === void 0 ? void 0 : _response$errors.reduce((p, c) => _objectSpread(_objectSpread({}, p), c), {}));\n      } else {\n        console.log(\"error\", response.message);\n      }\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"Set new password\"\n      }), /*#__PURE__*/_jsx(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      })]\n    }), /*#__PURE__*/_jsx(\"section\", {\n      className: \"auth-container\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"auth-card\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"left-container\",\n          children: /*#__PURE__*/_jsx(Image, {\n            src: \"/images/product2.jpg\",\n            alt: \"Picture of the author\",\n            layout: \"fill\"\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"right-container\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"info-block\",\n            children: /*#__PURE__*/_jsx(\"div\", {\n              children: \"This link is valid only for 24hrs.\"\n            })\n          }), /*#__PURE__*/_jsx(Formik, {\n            initialValues: {\n              password: \"\",\n              password2: \"\"\n            },\n            validationSchema: SetNewPasswordSchema,\n            onSubmit: onSubmit,\n            children: ({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              isSubmitting,\n              isValid\n            }) => /*#__PURE__*/_jsxs(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxs(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsx(\"label\", {\n                  htmlFor: \"password\",\n                  children: \"Password\"\n                }), /*#__PURE__*/_jsx(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  name: \"password\",\n                  value: values.password,\n                  onChange: handleChange,\n                  onBlur: handleBlur\n                }), errors.password && touched.password && /*#__PURE__*/_jsx(\"span\", {\n                  className: \"error-message\",\n                  children: errors.password\n                })]\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsx(\"label\", {\n                  htmlFor: \"rePassword\",\n                  children: \"Password confirmation\"\n                }), /*#__PURE__*/_jsx(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  name: \"password2\",\n                  value: values.password2,\n                  onChange: handleChange,\n                  onBlur: handleBlur\n                }), errors.password2 && touched.password2 && /*#__PURE__*/_jsx(\"span\", {\n                  className: \"error-message\",\n                  children: errors.password2\n                })]\n              }), /*#__PURE__*/_jsx(\"button\", {\n                className: \"btn accent-btn\",\n                disabled: isSubmitting || !isValid,\n                children: \"Set new password\"\n              })]\n            })\n          })]\n        })]\n      })\n    })]\n  });\n};\n\nexport default SetNewPassword;\nexport const getServerSideProps = async ctx => {\n  return {\n    props: {\n      token: ctx.query.token || null\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"module"}