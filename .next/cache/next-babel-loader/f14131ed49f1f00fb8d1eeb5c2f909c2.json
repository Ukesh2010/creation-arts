{"ast":null,"code":"var _jsxFileName = \"/home/anuz/work/personal/creation-arts/contexts/CartContext.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { createContext, useContext, useReducer } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getItem, setItem } from \"../utils/localStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartStateContext = /*#__PURE__*/createContext();\nconst CartDispatchContext = /*#__PURE__*/createContext();\nconst ID_KEY = \"_id\";\n\nconst calculateTotal = (items, key = \"total_amount\") => {\n  if (items.length === 0) return 0;\n  return items.map(item => item[key]).reduce((t, i) => t + i, 0);\n};\n\nconst CartProvider = ({\n  children\n}) => {\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer((state, action) => {\n    switch (action.type) {\n      case \"ADD_CART_ITEM\":\n        if (!state.items.find(item => item[ID_KEY] === action.payload.item[ID_KEY])) state.items.push(action.payload.item);\n        break;\n\n      case \"UPDATE_CART_ITEM\":\n        state.items = state.items.map(item => {\n          if (item[ID_KEY] === action.payload.id) return _objectSpread(_objectSpread({}, item), action.payload.item);\n          return item;\n        });\n        break;\n\n      case \"REMOVE_CART_ITEM\":\n        state.items = state.items.filter(item => item[ID_KEY] !== action.payload.id);\n        break;\n\n      case \"SET_SHIPPING_ADDRESS_ID\":\n        state.shipping_address_id = action.payload.shipping_address_id;\n        break;\n\n      case \"CLEAR_CART\":\n        state.items = [];\n        state.shipping_address_id = null;\n        break;\n\n      default:\n        throw new Error(\"undefined action type used\");\n    }\n\n    state.total_amount = calculateTotal(state.items, \"total_amount\");\n    setItem(\"cart\", JSON.stringify(state));\n    return _objectSpread(_objectSpread({}, state), {}, {\n      items: [...state.items]\n    });\n  }, JSON.parse(getItem(\"cart\") || null) || {\n    items: [],\n    total_amount: 0,\n    shipping_address_id: null\n  });\n  return /*#__PURE__*/_jsxDEV(CartStateContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsxDEV(CartDispatchContext.Provider, {\n      value: dispatch,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\nCartProvider.propTypes = {\n  children: PropTypes.element.isRequired\n};\nexport default CartProvider;\nexport const useCartState = () => {\n  const context = useContext(CartStateContext);\n\n  if (context === undefined) {\n    throw new Error(\"useCartStateContext must be used within a CartProvider\");\n  }\n\n  return context;\n};\nexport const useCartDispatchContext = () => {\n  const context = useContext(CartDispatchContext);\n\n  if (context === undefined) {\n    throw new Error(\"useCartDispatchContext must be used within a CartProvider\");\n  }\n\n  return context;\n};\nexport const useCartActions = () => {\n  const state = useCartState();\n  const dispatch = useCartDispatchContext();\n\n  const findItem = id => state.items.find(item => item[ID_KEY] === id);\n\n  const countItem = () => state.items.length;\n\n  const addItem = item => {\n    dispatch({\n      type: \"ADD_CART_ITEM\",\n      payload: {\n        item\n      }\n    });\n  };\n\n  const updateItem = (id, item) => {\n    dispatch({\n      type: \"UPDATE_CART_ITEM\",\n      payload: {\n        id,\n        item\n      }\n    });\n  };\n\n  const removeItem = id => {\n    dispatch({\n      type: \"REMOVE_CART_ITEM\",\n      payload: {\n        id\n      }\n    });\n  };\n\n  const setShippingAddressId = id => {\n    dispatch({\n      type: \"SET_SHIPPING_ADDRESS_ID\",\n      payload: {\n        shipping_address_id: id\n      }\n    });\n  };\n\n  const clearCart = () => {\n    dispatch({\n      type: \"CLEAR_CART\",\n      payload: null\n    });\n  };\n\n  return {\n    findItem,\n    countItem,\n    addItem,\n    updateItem,\n    removeItem,\n    setShippingAddressId,\n    clearCart\n  };\n};","map":{"version":3,"sources":["/home/anuz/work/personal/creation-arts/contexts/CartContext.js"],"names":["React","createContext","useContext","useReducer","PropTypes","getItem","setItem","CartStateContext","CartDispatchContext","ID_KEY","calculateTotal","items","key","length","map","item","reduce","t","i","CartProvider","children","state","dispatch","action","type","find","payload","push","id","filter","shipping_address_id","Error","total_amount","JSON","stringify","parse","propTypes","element","isRequired","useCartState","context","undefined","useCartDispatchContext","useCartActions","findItem","countItem","addItem","updateItem","removeItem","setShippingAddressId","clearCart"],"mappings":"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","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getItem, setItem } from \"../utils/localStorage\";\n\nconst CartStateContext = createContext();\nconst CartDispatchContext = createContext();\n\nconst ID_KEY = \"_id\";\n\nconst calculateTotal = (items, key = \"total_amount\") => {\n  if (items.length === 0) return 0;\n  return items.map((item) => item[key]).reduce((t, i) => t + i, 0);\n};\n\nconst CartProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(\n    (state, action) => {\n      switch (action.type) {\n        case \"ADD_CART_ITEM\":\n          if (\n            !state.items.find(\n              (item) => item[ID_KEY] === action.payload.item[ID_KEY]\n            )\n          )\n            state.items.push(action.payload.item);\n          break;\n        case \"UPDATE_CART_ITEM\":\n          state.items = state.items.map((item) => {\n            if (item[ID_KEY] === action.payload.id)\n              return { ...item, ...action.payload.item };\n            return item;\n          });\n          break;\n        case \"REMOVE_CART_ITEM\":\n          state.items = state.items.filter(\n            (item) => item[ID_KEY] !== action.payload.id\n          );\n          break;\n        case \"SET_SHIPPING_ADDRESS_ID\":\n          state.shipping_address_id = action.payload.shipping_address_id;\n          break;\n        case \"CLEAR_CART\":\n          state.items = [];\n          state.shipping_address_id = null;\n          break;\n        default:\n          throw new Error(\"undefined action type used\");\n      }\n      state.total_amount = calculateTotal(state.items, \"total_amount\");\n\n      setItem(\"cart\", JSON.stringify(state));\n      return { ...state, items: [...state.items] };\n    },\n    JSON.parse(getItem(\"cart\") || null) || {\n      items: [],\n      total_amount: 0,\n      shipping_address_id: null,\n    }\n  );\n\n  return (\n    <CartStateContext.Provider value={state}>\n      <CartDispatchContext.Provider value={dispatch}>\n        {children}\n      </CartDispatchContext.Provider>\n    </CartStateContext.Provider>\n  );\n};\n\nCartProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default CartProvider;\n\nexport const useCartState = () => {\n  const context = useContext(CartStateContext);\n  if (context === undefined) {\n    throw new Error(\"useCartStateContext must be used within a CartProvider\");\n  }\n  return context;\n};\n\nexport const useCartDispatchContext = () => {\n  const context = useContext(CartDispatchContext);\n  if (context === undefined) {\n    throw new Error(\n      \"useCartDispatchContext must be used within a CartProvider\"\n    );\n  }\n  return context;\n};\n\nexport const useCartActions = () => {\n  const state = useCartState();\n  const dispatch = useCartDispatchContext();\n  const findItem = (id) => state.items.find((item) => item[ID_KEY] === id);\n  const countItem = () => state.items.length;\n  const addItem = (item) => {\n    dispatch({\n      type: \"ADD_CART_ITEM\",\n      payload: { item },\n    });\n  };\n\n  const updateItem = (id, item) => {\n    dispatch({\n      type: \"UPDATE_CART_ITEM\",\n      payload: { id, item },\n    });\n  };\n\n  const removeItem = (id) => {\n    dispatch({\n      type: \"REMOVE_CART_ITEM\",\n      payload: { id },\n    });\n  };\n  const setShippingAddressId = (id) => {\n    dispatch({\n      type: \"SET_SHIPPING_ADDRESS_ID\",\n      payload: { shipping_address_id: id },\n    });\n  };\n  const clearCart = () => {\n    dispatch({\n      type: \"CLEAR_CART\",\n      payload: null,\n    });\n  };\n\n  return {\n    findItem,\n    countItem,\n    addItem,\n    updateItem,\n    removeItem,\n    setShippingAddressId,\n    clearCart,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}