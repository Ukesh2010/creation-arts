{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { createContext, useContext, useReducer } from \"react\";\nimport { getItem, setItem } from \"../utils/localStorage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar CartStateContext = /*#__PURE__*/createContext();\nvar CartDispatchContext = /*#__PURE__*/createContext();\nvar ID_KEY = \"_id\";\n\nvar calculateTotal = function calculateTotal(items) {\n  var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"total_amount\";\n  if (items.length === 0) return 0;\n  return items.map(function (item) {\n    return item[key];\n  }).reduce(function (t, i) {\n    return t + i;\n  }, 0);\n};\n\nvar CartProvider = function CartProvider(_ref) {\n  var children = _ref.children;\n\n  var _useReducer = useReducer(function (state, action) {\n    switch (action.type) {\n      case \"ADD_CART_ITEM\":\n        if (!state.items.find(function (item) {\n          return item[ID_KEY] === action.payload.item[ID_KEY];\n        })) state.items.push(action.payload.item);\n        break;\n\n      case \"UPDATE_CART_ITEM\":\n        state.items = state.items.map(function (item) {\n          if (item[ID_KEY] === action.payload.id) return _objectSpread(_objectSpread({}, item), action.payload.item);\n          return item;\n        });\n        break;\n\n      case \"REMOVE_CART_ITEM\":\n        state.items = state.items.filter(function (item) {\n          return item[ID_KEY] !== action.payload.id;\n        });\n        break;\n\n      case \"SET_SHIPPING_ADDRESS_ID\":\n        state.shipping_address_id = action.payload.shipping_address_id;\n        break;\n\n      case \"CLEAR_CART\":\n        state.items = [];\n        state.shipping_address_id = null;\n        break;\n\n      default:\n        throw new Error(\"undefined action type used\");\n    }\n\n    state.total_amount = calculateTotal(state.items, \"total_amount\");\n    setItem(\"cart\", JSON.stringify(state));\n    return _objectSpread(_objectSpread({}, state), {}, {\n      items: _toConsumableArray(state.items)\n    });\n  }, JSON.parse(getItem(\"cart\") || null) || {\n    items: [],\n    total_amount: 0,\n    shipping_address_id: null\n  }),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  return /*#__PURE__*/_jsx(CartStateContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsx(CartDispatchContext.Provider, {\n      value: dispatch,\n      children: children\n    })\n  });\n};\n\nexport default CartProvider;\nexport var useCartState = function useCartState() {\n  var context = useContext(CartStateContext);\n\n  if (context === undefined) {\n    throw new Error(\"useCartStateContext must be used within a CartProvider\");\n  }\n\n  return context;\n};\nexport var useCartDispatchContext = function useCartDispatchContext() {\n  var context = useContext(CartDispatchContext);\n\n  if (context === undefined) {\n    throw new Error(\"useCartDispatchContext must be used within a CartProvider\");\n  }\n\n  return context;\n};\nexport var useCartActions = function useCartActions() {\n  var state = useCartState();\n  var dispatch = useCartDispatchContext();\n\n  var findItem = function findItem(id) {\n    return state.items.find(function (item) {\n      return item[ID_KEY] === id;\n    });\n  };\n\n  var countItem = function countItem() {\n    return state.items.length;\n  };\n\n  var addItem = function addItem(item) {\n    dispatch({\n      type: \"ADD_CART_ITEM\",\n      payload: {\n        item: item\n      }\n    });\n  };\n\n  var updateItem = function updateItem(id, item) {\n    dispatch({\n      type: \"UPDATE_CART_ITEM\",\n      payload: {\n        id: id,\n        item: item\n      }\n    });\n  };\n\n  var removeItem = function removeItem(id) {\n    dispatch({\n      type: \"REMOVE_CART_ITEM\",\n      payload: {\n        id: id\n      }\n    });\n  };\n\n  var setShippingAddressId = function setShippingAddressId(id) {\n    dispatch({\n      type: \"SET_SHIPPING_ADDRESS_ID\",\n      payload: {\n        shipping_address_id: id\n      }\n    });\n  };\n\n  var clearCart = function clearCart() {\n    dispatch({\n      type: \"CLEAR_CART\",\n      payload: null\n    });\n  };\n\n  return {\n    findItem: findItem,\n    countItem: countItem,\n    addItem: addItem,\n    updateItem: updateItem,\n    removeItem: removeItem,\n    setShippingAddressId: setShippingAddressId,\n    clearCart: clearCart\n  };\n};","map":null,"metadata":{},"sourceType":"module"}