{"ast":null,"code":"var _jsxFileName = \"/home/anuz/work/personal/creation-arts/pages/login/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { login } from \"../../api\";\nimport { useRouter } from \"next/router\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { BeatLoader, ClipLoader, PulseLoader } from \"react-spinners\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string().email().required(),\n  password: Yup.string().min(5).required()\n});\n\nconst Login = () => {\n  const router = useRouter();\n  const {\n    login: setAuthToken\n  } = useAuth();\n  const {\n    addToast\n  } = useToasts();\n\n  const onSubmit = async (values, {\n    setSubmitting,\n    setErrors\n  }) => {\n    try {\n      const response = await login(values);\n      setAuthToken(response.token);\n      router.push(\"/\");\n    } catch (response) {\n      if (response.errors) {\n        setErrors(response.errors.reduce((p, c) => _objectSpread(_objectSpread({}, p), c), {}));\n      } else {\n        addToast((response === null || response === void 0 ? void 0 : response.message) || \"Error while logging in.\", {\n          appearance: \"error\"\n        });\n      }\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:title\",\n        content: \"Login to your account | Yala Treasure\"\n      }, \"login_title\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:description\",\n        content: \"Don’t have a Yala Treasure account? Register now for free and buy the best quality handicrafts to preserve your culture and traditions. Let’s hurry up!\"\n      }, \"login_description\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"auth-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-container\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: \"/images/product2.jpg\",\n            alt: \"Picture of the author\",\n            layout: \"fill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-block\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Don't have an account?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n                href: \"/register\",\n                children: \"Register Now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: {\n              email: \"\",\n              password: \"\"\n            },\n            validationSchema: LoginSchema,\n            onSubmit: onSubmit,\n            children: ({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              isSubmitting\n            }) => /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control\",\n                  type: \"text\",\n                  name: \"email\",\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  value: values.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 41\n                }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error-message\",\n                  children: errors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control\",\n                  type: \"password\",\n                  name: \"password\",\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  value: values.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 41\n                }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error-message\",\n                  children: errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  href: \"/forgot-password\",\n                  children: \"Forgot Password?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn accent-btn\",\n                disabled: isSubmitting,\n                children: [\"login \", /*#__PURE__*/_jsxDEV(PulseLoader, {\n                  loading: isSubmitting,\n                  size: 4\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  marginTop: \"1rem\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  href: \"/\",\n                  children: \"back to home page\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/anuz/work/personal/creation-arts/pages/login/index.js"],"names":["React","Fragment","Head","Image","Link","Formik","Yup","login","useRouter","useAuth","useToasts","BeatLoader","ClipLoader","PulseLoader","LoginSchema","object","shape","email","string","required","password","min","Login","router","setAuthToken","addToast","onSubmit","values","setSubmitting","setErrors","response","token","push","errors","reduce","p","c","message","appearance","touched","handleChange","handleBlur","handleSubmit","isSubmitting","display","justifyContent","marginTop"],"mappings":"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","sourcesContent":["import React, {Fragment} from \"react\";\nimport Head from \"next/head\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport {Formik} from \"formik\";\nimport * as Yup from \"yup\";\nimport {login} from \"../../api\";\nimport {useRouter} from \"next/router\";\nimport {useAuth} from \"../../contexts/AuthContext\";\nimport {useToasts} from \"react-toast-notifications\";\nimport {BeatLoader, ClipLoader, PulseLoader} from \"react-spinners\";\n\nconst LoginSchema = Yup.object().shape({\n    email: Yup.string().email().required(),\n    password: Yup.string().min(5).required(),\n});\n\nconst Login = () => {\n    const router = useRouter();\n    const {login: setAuthToken} = useAuth();\n    const {addToast} = useToasts();\n\n    const onSubmit = async (values, {setSubmitting, setErrors}) => {\n        try {\n            const response = await login(values);\n            setAuthToken(response.token);\n            router.push(\"/\");\n        } catch (response) {\n            if (response.errors) {\n                setErrors(response.errors.reduce((p, c) => ({...p, ...c}), {}));\n            } else {\n                addToast(response?.message || \"Error while logging in.\", {\n                    appearance: \"error\",\n                });\n            }\n        } finally {\n            setSubmitting(false);\n        }\n    };\n\n    return (\n        <Fragment>\n            <Head>\n                <title>Login</title>\n                <link rel=\"icon\" href={\"/favicon.ico\"}/>\n                <meta property={\"og:title\"} content={\"Login to your account | Yala Treasure\"} key={\"login_title\"}/>\n                <meta property={\"og:description\"}\n                      content={\"Don’t have a Yala Treasure account? Register now for free and buy the best quality handicrafts to preserve your culture and traditions. Let’s hurry up!\"}\n                      key={\"login_description\"}/>\n            </Head>\n            <section className=\"auth-container\">\n                <div className=\"auth-card\">\n                    <div className=\"left-container\">\n                        <Image\n                            src=\"/images/product2.jpg\"\n                            alt=\"Picture of the author\"\n                            layout=\"fill\"\n                        />\n                    </div>\n\n                    <div className=\"right-container\">\n                        <div className=\"info-block\">\n                            <div>\n                                Don't have an account?{\" \"}\n                                <Link href={\"/register\"}>Register Now</Link>\n                            </div>\n                        </div>\n                        <Formik\n                            initialValues={{email: \"\", password: \"\"}}\n                            validationSchema={LoginSchema}\n                            onSubmit={onSubmit}\n                        >\n                            {({\n                                  values,\n                                  errors,\n                                  touched,\n                                  handleChange,\n                                  handleBlur,\n                                  handleSubmit,\n                                  isSubmitting,\n                              }) => (\n                                <form onSubmit={handleSubmit}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"email\">Email</label>\n                                        <input\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            name={\"email\"}\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            value={values.email}\n                                        />\n                                        {errors.email && touched.email && (\n                                            <span className={\"error-message\"}>{errors.email}</span>\n                                        )}\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"email\">Password</label>\n                                        <input\n                                            className=\"form-control\"\n                                            type=\"password\"\n                                            name={\"password\"}\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            value={values.password}\n                                        />\n                                        {errors.password && touched.password && (\n                                            <span className={\"error-message\"}>{errors.password}</span>\n                                        )}\n                                    </div>\n                                    <div>\n                                        <Link href={\"/forgot-password\"}>Forgot Password?</Link>\n                                    </div>\n                                    <button className=\"btn accent-btn\" disabled={isSubmitting}>\n                                        login <PulseLoader loading={isSubmitting} size={4}/>\n                                    </button>\n\n                                    <div\n                                        style={{\n                                            display: \"flex\",\n                                            justifyContent: \"center\",\n                                            marginTop: \"1rem\",\n                                        }}\n                                    >\n                                        <Link href={\"/\"}>back to home page</Link>\n                                    </div>\n                                </form>\n                            )}\n                        </Formik>\n                        {/*<div className=\"or-block\">*/}\n                        {/*  <span>OR</span>*/}\n                        {/*</div>*/}\n                        {/*<div className=\"social-login-container\">*/}\n                        {/*  <button className=\"btn fb-btn\">*/}\n                        {/*    <FontAwesomeIcon icon={faFacebookF} size={\"2x\"} />*/}\n                        {/*    Continue with Facebook*/}\n                        {/*  </button>*/}\n                        {/*</div>*/}\n                    </div>\n                </div>\n            </section>\n        </Fragment>\n    );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}