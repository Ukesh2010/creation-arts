{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { createContext, useContext, useReducer } from \"react\";\nimport { getItem, removeItem, setItem } from \"../utils/localStorage\";\nimport JWTValidator from \"../utils/JWTValidator\";\nvar AuthStateContext = /*#__PURE__*/createContext();\nvar AuthDispatchContext = /*#__PURE__*/createContext();\n\nvar AuthProvider = function AuthProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useReducer = useReducer(function (state, action) {\n    switch (action.type) {\n      case \"LOGIN\":\n        setItem(\"token\", action.payload.token);\n        return _objectSpread(_objectSpread({}, state), {}, {\n          authenticated: true\n        });\n\n      case \"LOGOUT\":\n        removeItem(\"token\");\n        return {\n          authenticated: false\n        };\n\n      default:\n        throw new Error(\"undefined action type used\");\n    }\n  }, {\n    authenticated: !!getItem(\"token\") && JWTValidator(getItem(\"token\"))\n  }),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  return /*#__PURE__*/_jsx(AuthStateContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsx(AuthDispatchContext.Provider, {\n      value: dispatch,\n      children: children\n    })\n  });\n};\n\n_s(AuthProvider, \"G+PlPjLNurArGkuTmdpsXaFCEcA=\");\n\n_c = AuthProvider;\nexport default AuthProvider;\nexport var useAuthContext = function useAuthContext() {\n  _s2();\n\n  var context = useContext(AuthStateContext);\n\n  if (context === undefined) {\n    throw new Error(\"useAuthContext must be used within a AuthProvider\");\n  }\n\n  return context;\n};\n\n_s2(useAuthContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport var useAuthDispatch = function useAuthDispatch() {\n  _s3();\n\n  var context = useContext(AuthDispatchContext);\n\n  if (context === undefined) {\n    throw new Error(\"useAuthDispatch must be used within a AuthProvider\");\n  }\n\n  return context;\n};\n\n_s3(useAuthDispatch, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport var useAuth = function useAuth() {\n  _s4();\n\n  var authContext = useAuthContext();\n  var authDispatch = useAuthDispatch();\n\n  var login = function login(token) {\n    authDispatch({\n      type: \"LOGIN\",\n      payload: {\n        token: token\n      }\n    });\n  };\n\n  var logout = function logout() {\n    authDispatch({\n      type: \"LOGOUT\",\n      payload: null\n    });\n  };\n\n  return {\n    authenticated: authContext.authenticated,\n    login: login,\n    logout: logout\n  };\n};\n\n_s4(useAuth, \"RM9sdYBQo4FB8OKgXNf+0O5f6Iw=\", false, function () {\n  return [useAuthContext, useAuthDispatch];\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/media/zoro/plus/Workspace/creation_arts/creation-arts/contexts/AuthContext.js"],"names":["React","createContext","useContext","useReducer","getItem","removeItem","setItem","JWTValidator","AuthStateContext","AuthDispatchContext","AuthProvider","children","state","action","type","payload","token","authenticated","Error","dispatch","useAuthContext","context","undefined","useAuthDispatch","useAuth","authContext","authDispatch","login","logout"],"mappings":"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","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\nimport { getItem, removeItem, setItem } from \"../utils/localStorage\";\nimport JWTValidator from \"../utils/JWTValidator\";\n\nconst AuthStateContext = createContext();\nconst AuthDispatchContext = createContext();\n\nconst AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(\n    (state, action) => {\n      switch (action.type) {\n        case \"LOGIN\":\n          setItem(\"token\", action.payload.token);\n          return { ...state, authenticated: true };\n        case \"LOGOUT\":\n          removeItem(\"token\");\n          return { authenticated: false };\n        default:\n          throw new Error(\"undefined action type used\");\n      }\n    },\n    { authenticated: !!getItem(\"token\") && JWTValidator(getItem(\"token\")) }\n  );\n\n  return (\n    <AuthStateContext.Provider value={state}>\n      <AuthDispatchContext.Provider value={dispatch}>\n        {children}\n      </AuthDispatchContext.Provider>\n    </AuthStateContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n\nexport const useAuthContext = () => {\n  const context = useContext(AuthStateContext);\n  if (context === undefined) {\n    throw new Error(\"useAuthContext must be used within a AuthProvider\");\n  }\n  return context;\n};\n\nexport const useAuthDispatch = () => {\n  const context = useContext(AuthDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useAuthDispatch must be used within a AuthProvider\");\n  }\n  return context;\n};\n\nexport const useAuth = () => {\n  const authContext = useAuthContext();\n  const authDispatch = useAuthDispatch();\n\n  const login = (token) => {\n    authDispatch({ type: \"LOGIN\", payload: { token } });\n  };\n  const logout = () => {\n    authDispatch({ type: \"LOGOUT\", payload: null });\n  };\n\n  return { authenticated: authContext.authenticated, login, logout };\n};\n"]},"metadata":{},"sourceType":"module"}