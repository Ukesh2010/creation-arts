{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useRouter } from \"next/router\";\nimport { forgotPassword } from \"../../api\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { PulseLoader } from \"react-spinners\";\nvar ForgotPasswordSchema = Yup.object().shape({\n  email: Yup.string().email().required()\n});\n\nvar ForgotPassword = function ForgotPassword() {\n  var router = useRouter();\n\n  var _useToasts = useToasts(),\n      addToast = _useToasts.addToast;\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref) {\n      var setSubmitting, setErrors;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setSubmitting = _ref.setSubmitting, setErrors = _ref.setErrors;\n              _context.prev = 1;\n              _context.next = 4;\n              return forgotPassword(values);\n\n            case 4:\n              router.push(\"/\");\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](1);\n\n              if (_context.t0.errors) {\n                setErrors(_context.t0.errors.reduce(function (p, c) {\n                  return _objectSpread(_objectSpread({}, p), c);\n                }, {}));\n              } else {\n                addToast((_context.t0 === null || _context.t0 === void 0 ? void 0 : _context.t0.message) || \"Error while trying to reset password\", {\n                  appearance: \"error\"\n                });\n              }\n\n            case 10:\n              _context.prev = 10;\n              setSubmitting(false);\n              return _context.finish(10);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 7, 10, 13]]);\n    }));\n\n    return function onSubmit(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"Forgot password\"\n      }), /*#__PURE__*/_jsx(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      })]\n    }), /*#__PURE__*/_jsx(\"section\", {\n      className: \"auth-container\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"auth-card\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"left-container\",\n          children: /*#__PURE__*/_jsx(Image, {\n            src: \"/images/product2.jpg\",\n            alt: \"Picture of the author\",\n            layout: \"fill\"\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"right-container\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"info-block\",\n            children: /*#__PURE__*/_jsx(\"div\", {\n              children: \"We will send you a reset password link, please enter your email.\"\n            })\n          }), /*#__PURE__*/_jsx(Formik, {\n            initialValues: {\n              email: \"\"\n            },\n            validationSchema: ForgotPasswordSchema,\n            onSubmit: onSubmit,\n            children: function children(_ref3) {\n              var values = _ref3.values,\n                  errors = _ref3.errors,\n                  touched = _ref3.touched,\n                  handleChange = _ref3.handleChange,\n                  handleBlur = _ref3.handleBlur,\n                  handleSubmit = _ref3.handleSubmit,\n                  isSubmitting = _ref3.isSubmitting;\n              return /*#__PURE__*/_jsxs(\"form\", {\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxs(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsx(\"label\", {\n                    htmlFor: \"email\",\n                    children: \"Email\"\n                  }), /*#__PURE__*/_jsx(\"input\", {\n                    className: \"form-control\",\n                    type: \"text\",\n                    name: \"email\",\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    value: values.email\n                  }), errors.email && touched.email && /*#__PURE__*/_jsx(\"span\", {\n                    className: \"error-message\",\n                    children: errors.email\n                  })]\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  children: /*#__PURE__*/_jsx(Link, {\n                    href: \"/login\",\n                    children: \"Go back to Login\"\n                  })\n                }), /*#__PURE__*/_jsxs(\"button\", {\n                  className: \"btn accent-btn\",\n                  disabled: isSubmitting,\n                  children: [\"Reset password\", \" \", /*#__PURE__*/_jsx(PulseLoader, {\n                    loading: isSubmitting,\n                    size: 4\n                  })]\n                })]\n              });\n            }\n          })]\n        })]\n      })\n    })]\n  });\n};\n\nexport default ForgotPassword;","map":null,"metadata":{},"sourceType":"module"}