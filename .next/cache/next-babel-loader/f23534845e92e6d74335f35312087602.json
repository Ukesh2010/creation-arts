{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/anuz/work/personal/creation-arts/pages/register/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { register } from \"../../api\";\nimport { useRouter } from \"next/router\";\nvar RegisterSchema = Yup.object().shape({\n  email: Yup.string().email().required(),\n  password: Yup.string().min(8).max(16).required(),\n  password2: Yup.string().oneOf([Yup.ref(\"password\")], \"should match with password\").required(\"password confirmation is a required field\")\n});\n\nvar Register = function Register() {\n  _s();\n\n  var router = useRouter();\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref) {\n      var setSubmitting, setErrors, _response$errors;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setSubmitting = _ref.setSubmitting, setErrors = _ref.setErrors;\n              setSubmitting(true);\n              _context.prev = 2;\n              _context.next = 5;\n              return register(_objectSpread(_objectSpread({}, values), {}, {\n                role: \"customer\"\n              }));\n\n            case 5:\n              router.push(\"/login\");\n              _context.next = 12;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](2);\n              console.log(_context.t0);\n              setErrors(_context.t0 === null || _context.t0 === void 0 ? void 0 : (_response$errors = _context.t0.errors) === null || _response$errors === void 0 ? void 0 : _response$errors.reduce(function (p, c) {\n                return _objectSpread(_objectSpread({}, p), c);\n              }, {}));\n\n            case 12:\n              _context.prev = 12;\n              setSubmitting(false);\n              return _context.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 8, 12, 15]]);\n    }));\n\n    return function onSubmit(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"auth-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-container\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: \"/images/product2.jpg\",\n            alt: \"Picture of the author\",\n            layout: \"fill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-block\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n                href: \"/login\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 42\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: {\n              email: \"\",\n              password: \"\",\n              password2: \"\"\n            },\n            validationSchema: RegisterSchema,\n            onSubmit: onSubmit,\n            children: function children(_ref3) {\n              var values = _ref3.values,\n                  errors = _ref3.errors,\n                  touched = _ref3.touched,\n                  handleChange = _ref3.handleChange,\n                  handleBlur = _ref3.handleBlur,\n                  handleSubmit = _ref3.handleSubmit,\n                  isSubmitting = _ref3.isSubmitting;\n              return /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"email\",\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    className: \"form-control\",\n                    name: \"email\",\n                    value: values.email,\n                    onChange: handleChange,\n                    onBlur: handleBlur\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 21\n                  }, _this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"error-message\",\n                    children: errors.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 23\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"password\",\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"password\",\n                    className: \"form-control\",\n                    name: \"password\",\n                    value: values.password,\n                    onChange: handleChange,\n                    onBlur: handleBlur\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 21\n                  }, _this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"error-message\",\n                    children: errors.password\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 23\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"rePassword\",\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"password\",\n                    className: \"form-control\",\n                    name: \"password2\",\n                    value: values.password2,\n                    onChange: handleChange,\n                    onBlur: handleBlur\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 21\n                  }, _this), errors.password2 && touched.password2 && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"error-message\",\n                    children: errors.password2\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 23\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn accent-btn\",\n                  children: \"Register\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, _this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Register, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/anuz/work/personal/creation-arts/pages/register/index.js"],"names":["React","Fragment","Head","Image","Link","Formik","Yup","register","useRouter","RegisterSchema","object","shape","email","string","required","password","min","max","password2","oneOf","ref","Register","router","onSubmit","values","setSubmitting","setErrors","role","push","console","log","errors","reduce","p","c","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { register } from \"../../api\";\nimport { useRouter } from \"next/router\";\n\nconst RegisterSchema = Yup.object().shape({\n  email: Yup.string().email().required(),\n  password: Yup.string().min(8).max(16).required(),\n  password2: Yup.string()\n    .oneOf([Yup.ref(\"password\")], \"should match with password\")\n    .required(\"password confirmation is a required field\"),\n});\n\nconst Register = () => {\n  const router = useRouter();\n\n  const onSubmit = async (values, { setSubmitting, setErrors }) => {\n    setSubmitting(true);\n    try {\n      await register({ ...values, role: \"customer\" });\n      router.push(\"/login\");\n    } catch (response) {\n      console.log(response)\n      setErrors(response?.errors?.reduce((p, c) => ({ ...p, ...c }), {}));\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Head>\n        <title>Products</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n      <section className=\"auth-container\">\n        <div className=\"auth-card\">\n          <div className=\"left-container\">\n            <Image\n              src=\"/images/product2.jpg\"\n              alt=\"Picture of the author\"\n              layout=\"fill\"\n            />\n          </div>\n\n          <div className=\"right-container\">\n            <div className=\"info-block\">\n              <div>\n                Already have an account? <Link href={\"/login\"}>Login</Link>\n              </div>\n            </div>\n            <Formik\n              initialValues={{ email: \"\", password: \"\", password2: \"\" }}\n              validationSchema={RegisterSchema}\n              onSubmit={onSubmit}\n            >\n              {({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                isSubmitting,\n              }) => (\n                <form onSubmit={handleSubmit}>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                      type=\"email\"\n                      className=\"form-control\"\n                      name={\"email\"}\n                      value={values.email}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                    />\n                    {errors.email && touched.email && (\n                      <span className={\"error-message\"}>{errors.email}</span>\n                    )}\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      name={\"password\"}\n                      value={values.password}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                    />\n                    {errors.password && touched.password && (\n                      <span className={\"error-message\"}>{errors.password}</span>\n                    )}\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label htmlFor=\"rePassword\">Password</label>\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      name={\"password2\"}\n                      value={values.password2}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                    />\n                    {errors.password2 && touched.password2 && (\n                      <span className={\"error-message\"}>\n                        {errors.password2}\n                      </span>\n                    )}\n                  </div>\n                  <button className=\"btn accent-btn\">Register</button>\n                </form>\n              )}\n            </Formik>\n          </div>\n        </div>\n      </section>\n    </Fragment>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}