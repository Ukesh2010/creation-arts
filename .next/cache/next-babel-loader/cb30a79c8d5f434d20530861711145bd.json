{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/anuz/work/personal/creation-arts/pages/register/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { register } from \"../../api\";\nimport { useRouter } from \"next/router\";\nconst RegisterSchema = Yup.object().shape({\n  email: Yup.string().email().required(),\n  password: Yup.string().min(8).max(16).required(),\n  password2: Yup.string().oneOf([Yup.ref(\"password\")], \"should match with password\").required(\"password confirmation is a required field\")\n});\n\nconst Register = () => {\n  const router = useRouter();\n\n  const onSubmit = async (values, {\n    setSubmitting,\n    setErrors\n  }) => {\n    setSubmitting(true);\n\n    try {\n      await register(_objectSpread(_objectSpread({}, values), {}, {\n        role: \"customer\"\n      }));\n      router.push(\"/login\");\n    } catch (response) {\n      if (response.errors) {\n        var _response$errors;\n\n        setErrors(response === null || response === void 0 ? void 0 : (_response$errors = response.errors) === null || _response$errors === void 0 ? void 0 : _response$errors.reduce((p, c) => _objectSpread(_objectSpread({}, p), c), {}));\n      } else {\n        console.log(\"error\", response.message);\n      }\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"auth-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-container\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: \"/images/product2.jpg\",\n            alt: \"Picture of the author\",\n            layout: \"fill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-block\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n                href: \"/login\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 42\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: {\n              email: \"\",\n              password: \"\",\n              password2: \"\"\n            },\n            validationSchema: RegisterSchema,\n            onSubmit: onSubmit,\n            children: ({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              isSubmitting\n            }) => /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  className: \"form-control\",\n                  name: \"email\",\n                  value: values.email,\n                  onChange: handleChange,\n                  onBlur: handleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 21\n                }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error-message\",\n                  children: errors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  name: \"password\",\n                  value: values.password,\n                  onChange: handleChange,\n                  onBlur: handleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error-message\",\n                  children: errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"rePassword\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  name: \"password2\",\n                  value: values.password2,\n                  onChange: handleChange,\n                  onBlur: handleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 21\n                }, this), errors.password2 && touched.password2 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error-message\",\n                  children: errors.password2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn accent-btn\",\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Register;","map":{"version":3,"sources":["/home/anuz/work/personal/creation-arts/pages/register/index.js"],"names":["React","Fragment","Head","Image","Link","Formik","Yup","register","useRouter","RegisterSchema","object","shape","email","string","required","password","min","max","password2","oneOf","ref","Register","router","onSubmit","values","setSubmitting","setErrors","role","push","response","errors","reduce","p","c","console","log","message","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { register } from \"../../api\";\nimport { useRouter } from \"next/router\";\n\nconst RegisterSchema = Yup.object().shape({\n  email: Yup.string().email().required(),\n  password: Yup.string().min(8).max(16).required(),\n  password2: Yup.string()\n    .oneOf([Yup.ref(\"password\")], \"should match with password\")\n    .required(\"password confirmation is a required field\"),\n});\n\nconst Register = () => {\n  const router = useRouter();\n\n  const onSubmit = async (values, { setSubmitting, setErrors }) => {\n    setSubmitting(true);\n    try {\n      await register({ ...values, role: \"customer\" });\n      router.push(\"/login\");\n    } catch (response) {\n      if (response.errors) {\n        setErrors(response?.errors?.reduce((p, c) => ({ ...p, ...c }), {}));\n      } else {\n        console.log(\"error\", response.message);\n      }\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Head>\n        <title>Register</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n      <section className=\"auth-container\">\n        <div className=\"auth-card\">\n          <div className=\"left-container\">\n            <Image\n              src=\"/images/product2.jpg\"\n              alt=\"Picture of the author\"\n              layout=\"fill\"\n            />\n          </div>\n\n          <div className=\"right-container\">\n            <div className=\"info-block\">\n              <div>\n                Already have an account? <Link href={\"/login\"}>Login</Link>\n              </div>\n            </div>\n            <Formik\n              initialValues={{ email: \"\", password: \"\", password2: \"\" }}\n              validationSchema={RegisterSchema}\n              onSubmit={onSubmit}\n            >\n              {({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                isSubmitting,\n              }) => (\n                <form onSubmit={handleSubmit}>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                      type=\"email\"\n                      className=\"form-control\"\n                      name={\"email\"}\n                      value={values.email}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                    />\n                    {errors.email && touched.email && (\n                      <span className={\"error-message\"}>{errors.email}</span>\n                    )}\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      name={\"password\"}\n                      value={values.password}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                    />\n                    {errors.password && touched.password && (\n                      <span className={\"error-message\"}>{errors.password}</span>\n                    )}\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label htmlFor=\"rePassword\">Password</label>\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      name={\"password2\"}\n                      value={values.password2}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                    />\n                    {errors.password2 && touched.password2 && (\n                      <span className={\"error-message\"}>\n                        {errors.password2}\n                      </span>\n                    )}\n                  </div>\n                  <button className=\"btn accent-btn\">Register</button>\n                </form>\n              )}\n            </Formik>\n          </div>\n        </div>\n      </section>\n    </Fragment>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}